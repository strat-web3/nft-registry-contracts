{
  "address": "0xB05B653265c9ACEA631Da08E96d9C2bBE257a545",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "network",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Edited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "network",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Registered",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_network",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_Status",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_registrar",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_registryId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_info",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_ensName",
          "type": "string"
        }
      ],
      "name": "addEntry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "assets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "network",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "Status",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "registrar",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "registryId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "info",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "ensName",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_network",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_Status",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_registrar",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_registryId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_info",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_ensName",
          "type": "string"
        }
      ],
      "name": "editEntry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_registryId",
          "type": "uint256"
        }
      ],
      "name": "getAsset",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xb75196cd05122f27827c45db1080de30ed2a3839861fe4dd086b68d7041259c2",
  "receipt": {
    "to": null,
    "from": "0xd63ed6E274bedb34D9666B8f62ed32a73C43DD9e",
    "contractAddress": "0xB05B653265c9ACEA631Da08E96d9C2bBE257a545",
    "transactionIndex": 102,
    "gasUsed": "787792",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000001000001000000000000000000000002000000000000020000000000000000000800000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000020000008000040000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x68ace415cd5d404459d92c7870185c7541471abfc6c04de5cad193beb7ec49f5",
    "transactionHash": "0xb75196cd05122f27827c45db1080de30ed2a3839861fe4dd086b68d7041259c2",
    "logs": [
      {
        "transactionIndex": 102,
        "blockNumber": 5102660,
        "transactionHash": "0xb75196cd05122f27827c45db1080de30ed2a3839861fe4dd086b68d7041259c2",
        "address": "0xB05B653265c9ACEA631Da08E96d9C2bBE257a545",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000d63ed6e274bedb34d9666b8f62ed32a73c43dd9e"
        ],
        "data": "0x",
        "logIndex": 197,
        "blockHash": "0x68ace415cd5d404459d92c7870185c7541471abfc6c04de5cad193beb7ec49f5"
      }
    ],
    "blockNumber": 5102660,
    "cumulativeGasUsed": "11379738",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "56dcfb4e1bfb6aedb05f61053ba519f1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"network\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Edited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"network\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_network\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_Status\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_registrar\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_registryId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_info\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_ensName\",\"type\":\"string\"}],\"name\":\"addEntry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"assets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"network\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Status\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"registrar\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"registryId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"info\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ensName\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_network\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_Status\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_registrar\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_registryId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_info\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_ensName\",\"type\":\"string\"}],\"name\":\"editEntry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_registryId\",\"type\":\"uint256\"}],\"name\":\"getAsset\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Registry.sol\":\"Registry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Registry.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Registry is Ownable {\\n    enum Status {\\n        ACTIVE,\\n        DELETED,\\n        FROZEN,\\n        STOLEN,\\n        LOST,\\n        MOVED\\n    }\\n\\n    struct Asset {\\n        uint network;\\n        address contractAddress;\\n        uint id;\\n        uint Status;\\n        string registrar;\\n        uint registryId;\\n        string info;\\n        string ensName;\\n    }\\n    Asset[] public assets;\\n\\n    event Registered(uint network, address contractAddress, uint id);\\n    event Edited(uint network, address contractAddress, uint id);\\n\\n    constructor() {}\\n\\n    function addEntry(\\n        uint _network,\\n        address _contractAddress,\\n        uint _id,\\n        uint _Status,\\n        string memory _registrar,\\n        uint _registryId,\\n        string memory _info,\\n        string memory _ensName\\n    ) public onlyOwner {\\n        assets.push(\\n            Asset({\\n                network: _network,\\n                contractAddress: _contractAddress,\\n                id: _id,\\n                Status: _Status,\\n                registrar: _registrar,\\n                registryId: _registryId,\\n                info: _info,\\n                ensName: _ensName\\n            })\\n        );\\n        emit Registered(_network, _contractAddress, _id);\\n    }\\n\\n    function editEntry(\\n        uint _network,\\n        address _contractAddress,\\n        uint _id,\\n        uint _Status,\\n        string memory _registrar,\\n        uint _registryId,\\n        string memory _info,\\n        string memory _ensName\\n    ) public onlyOwner {\\n        uint i = getAsset(_registryId);\\n        assets[i].network = _network;\\n        assets[i].contractAddress = _contractAddress;\\n        assets[i].id = _id;\\n        assets[i].Status = _Status;\\n        assets[i].registrar = _registrar;\\n        assets[i].info = _info;\\n        assets[i].ensName = _ensName;\\n        emit Edited(_network, _contractAddress, _id);\\n    }\\n\\n    function getAsset(uint _registryId) public view returns (uint) {\\n        uint result;\\n\\n        for (uint i; i < assets.length; i++) {\\n            if (assets[i].registryId == _registryId) {\\n                result = i;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    receive() external payable {\\n        revert();\\n    }\\n\\n    fallback() external payable {\\n        revert();\\n    }\\n}\\n\",\"keccak256\":\"0x97c00ed0352769478e45e218f24cd799e3b320bdd7ab1c7f56074ed5cfe02d88\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610cd58061007e6000396000f3fe6080604052600436106100745760003560e01c80638da5cb5b1161004e5780638da5cb5b146100da578063cf35bdd014610107578063eac8f5b81461013b578063f2fde38b1461016957600080fd5b80635e104b7a1461008357806362245018146100a5578063715018a6146100c557600080fd5b3661007e57600080fd5b600080fd5b34801561008f57600080fd5b506100a361009e366004610967565b610189565b005b3480156100b157600080fd5b506100a36100c0366004610967565b610358565b3480156100d157600080fd5b506100a361051b565b3480156100e657600080fd5b506000546040516001600160a01b0390911681526020015b60405180910390f35b34801561011357600080fd5b50610127610122366004610a27565b61052f565b6040516100fe989796959493929190610a86565b34801561014757600080fd5b5061015b610156366004610a27565b610728565b6040519081526020016100fe565b34801561017557600080fd5b506100a3610184366004610af7565b610780565b6101916107fe565b60408051610100810182528981526001600160a01b0389811660208301908152928201898152606083018981526080840189815260a0850189905260c0850188905260e0850187905260018054808201825560009190915285517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6600890920291820190815596517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf7820180546001600160a01b031916919096161790945591517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf8840155517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf9830155519192917fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa909101906102ce9082610ba2565b5060a0820151600582015560c082015160068201906102ed9082610ba2565b5060e082015160078201906103029082610ba2565b5050604080518a81526001600160a01b038a1660208201529081018890527f39dd062cc095bf933d83338d8e4591b7eb119264d876f173cacb1cfdf2c9737f915060600160405180910390a15050505050505050565b6103606107fe565b600061036b84610728565b9050886001828154811061038157610381610c62565b90600052602060002090600802016000018190555087600182815481106103aa576103aa610c62565b906000526020600020906008020160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555086600182815481106103f3576103f3610c62565b906000526020600020906008020160020181905550856001828154811061041c5761041c610c62565b906000526020600020906008020160030181905550846001828154811061044557610445610c62565b906000526020600020906008020160040190816104629190610ba2565b50826001828154811061047757610477610c62565b906000526020600020906008020160060190816104949190610ba2565b5081600182815481106104a9576104a9610c62565b906000526020600020906008020160070190816104c69190610ba2565b50604080518a81526001600160a01b038a1660208201529081018890527f14d96479487ac068218496ed67427aaf72125ed745b23e765ccff8fcceb3b0ac9060600160405180910390a1505050505050505050565b6105236107fe565b61052d6000610858565b565b6001818154811061053f57600080fd5b6000918252602090912060089091020180546001820154600283015460038401546004850180549496506001600160a01b0390931694919390929061058390610b19565b80601f01602080910402602001604051908101604052809291908181526020018280546105af90610b19565b80156105fc5780601f106105d1576101008083540402835291602001916105fc565b820191906000526020600020905b8154815290600101906020018083116105df57829003601f168201915b50505050509080600501549080600601805461061790610b19565b80601f016020809104026020016040519081016040528092919081815260200182805461064390610b19565b80156106905780601f1061066557610100808354040283529160200191610690565b820191906000526020600020905b81548152906001019060200180831161067357829003601f168201915b5050505050908060070180546106a590610b19565b80601f01602080910402602001604051908101604052809291908181526020018280546106d190610b19565b801561071e5780601f106106f35761010080835404028352916020019161071e565b820191906000526020600020905b81548152906001019060200180831161070157829003601f168201915b5050505050905088565b60008060005b60015481101561077957836001828154811061074c5761074c610c62565b90600052602060002090600802016005015403610767578091505b8061077181610c78565b91505061072e565b5092915050565b6107886107fe565b6001600160a01b0381166107f25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6107fb81610858565b50565b6000546001600160a01b0316331461052d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107e9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146108bf57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126108eb57600080fd5b813567ffffffffffffffff80821115610906576109066108c4565b604051601f8301601f19908116603f0116810190828211818310171561092e5761092e6108c4565b8160405283815286602085880101111561094757600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600080600080610100898b03121561098457600080fd5b8835975061099460208a016108a8565b96506040890135955060608901359450608089013567ffffffffffffffff808211156109bf57600080fd5b6109cb8c838d016108da565b955060a08b0135945060c08b01359150808211156109e857600080fd5b6109f48c838d016108da565b935060e08b0135915080821115610a0a57600080fd5b50610a178b828c016108da565b9150509295985092959890939650565b600060208284031215610a3957600080fd5b5035919050565b6000815180845260005b81811015610a6657602081850181015186830182015201610a4a565b506000602082860101526020601f19601f83011685010191505092915050565b60006101008a835260018060a01b038a166020840152886040840152876060840152806080840152610aba81840188610a40565b90508560a084015282810360c0840152610ad48186610a40565b905082810360e0840152610ae88185610a40565b9b9a5050505050505050505050565b600060208284031215610b0957600080fd5b610b12826108a8565b9392505050565b600181811c90821680610b2d57607f821691505b602082108103610b4d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610b9d57600081815260208120601f850160051c81016020861015610b7a5750805b601f850160051c820191505b81811015610b9957828155600101610b86565b5050505b505050565b815167ffffffffffffffff811115610bbc57610bbc6108c4565b610bd081610bca8454610b19565b84610b53565b602080601f831160018114610c055760008415610bed5750858301515b600019600386901b1c1916600185901b178555610b99565b600085815260208120601f198616915b82811015610c3457888601518255948401946001909101908401610c15565b5085821015610c525787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b600060018201610c9857634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220022984bc4364f58be459ae185383606099f2de22965d72995617ee3bb5aaaed364736f6c63430008130033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c80638da5cb5b1161004e5780638da5cb5b146100da578063cf35bdd014610107578063eac8f5b81461013b578063f2fde38b1461016957600080fd5b80635e104b7a1461008357806362245018146100a5578063715018a6146100c557600080fd5b3661007e57600080fd5b600080fd5b34801561008f57600080fd5b506100a361009e366004610967565b610189565b005b3480156100b157600080fd5b506100a36100c0366004610967565b610358565b3480156100d157600080fd5b506100a361051b565b3480156100e657600080fd5b506000546040516001600160a01b0390911681526020015b60405180910390f35b34801561011357600080fd5b50610127610122366004610a27565b61052f565b6040516100fe989796959493929190610a86565b34801561014757600080fd5b5061015b610156366004610a27565b610728565b6040519081526020016100fe565b34801561017557600080fd5b506100a3610184366004610af7565b610780565b6101916107fe565b60408051610100810182528981526001600160a01b0389811660208301908152928201898152606083018981526080840189815260a0850189905260c0850188905260e0850187905260018054808201825560009190915285517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6600890920291820190815596517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf7820180546001600160a01b031916919096161790945591517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf8840155517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf9830155519192917fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa909101906102ce9082610ba2565b5060a0820151600582015560c082015160068201906102ed9082610ba2565b5060e082015160078201906103029082610ba2565b5050604080518a81526001600160a01b038a1660208201529081018890527f39dd062cc095bf933d83338d8e4591b7eb119264d876f173cacb1cfdf2c9737f915060600160405180910390a15050505050505050565b6103606107fe565b600061036b84610728565b9050886001828154811061038157610381610c62565b90600052602060002090600802016000018190555087600182815481106103aa576103aa610c62565b906000526020600020906008020160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555086600182815481106103f3576103f3610c62565b906000526020600020906008020160020181905550856001828154811061041c5761041c610c62565b906000526020600020906008020160030181905550846001828154811061044557610445610c62565b906000526020600020906008020160040190816104629190610ba2565b50826001828154811061047757610477610c62565b906000526020600020906008020160060190816104949190610ba2565b5081600182815481106104a9576104a9610c62565b906000526020600020906008020160070190816104c69190610ba2565b50604080518a81526001600160a01b038a1660208201529081018890527f14d96479487ac068218496ed67427aaf72125ed745b23e765ccff8fcceb3b0ac9060600160405180910390a1505050505050505050565b6105236107fe565b61052d6000610858565b565b6001818154811061053f57600080fd5b6000918252602090912060089091020180546001820154600283015460038401546004850180549496506001600160a01b0390931694919390929061058390610b19565b80601f01602080910402602001604051908101604052809291908181526020018280546105af90610b19565b80156105fc5780601f106105d1576101008083540402835291602001916105fc565b820191906000526020600020905b8154815290600101906020018083116105df57829003601f168201915b50505050509080600501549080600601805461061790610b19565b80601f016020809104026020016040519081016040528092919081815260200182805461064390610b19565b80156106905780601f1061066557610100808354040283529160200191610690565b820191906000526020600020905b81548152906001019060200180831161067357829003601f168201915b5050505050908060070180546106a590610b19565b80601f01602080910402602001604051908101604052809291908181526020018280546106d190610b19565b801561071e5780601f106106f35761010080835404028352916020019161071e565b820191906000526020600020905b81548152906001019060200180831161070157829003601f168201915b5050505050905088565b60008060005b60015481101561077957836001828154811061074c5761074c610c62565b90600052602060002090600802016005015403610767578091505b8061077181610c78565b91505061072e565b5092915050565b6107886107fe565b6001600160a01b0381166107f25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6107fb81610858565b50565b6000546001600160a01b0316331461052d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107e9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146108bf57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126108eb57600080fd5b813567ffffffffffffffff80821115610906576109066108c4565b604051601f8301601f19908116603f0116810190828211818310171561092e5761092e6108c4565b8160405283815286602085880101111561094757600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600080600080610100898b03121561098457600080fd5b8835975061099460208a016108a8565b96506040890135955060608901359450608089013567ffffffffffffffff808211156109bf57600080fd5b6109cb8c838d016108da565b955060a08b0135945060c08b01359150808211156109e857600080fd5b6109f48c838d016108da565b935060e08b0135915080821115610a0a57600080fd5b50610a178b828c016108da565b9150509295985092959890939650565b600060208284031215610a3957600080fd5b5035919050565b6000815180845260005b81811015610a6657602081850181015186830182015201610a4a565b506000602082860101526020601f19601f83011685010191505092915050565b60006101008a835260018060a01b038a166020840152886040840152876060840152806080840152610aba81840188610a40565b90508560a084015282810360c0840152610ad48186610a40565b905082810360e0840152610ae88185610a40565b9b9a5050505050505050505050565b600060208284031215610b0957600080fd5b610b12826108a8565b9392505050565b600181811c90821680610b2d57607f821691505b602082108103610b4d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610b9d57600081815260208120601f850160051c81016020861015610b7a5750805b601f850160051c820191505b81811015610b9957828155600101610b86565b5050505b505050565b815167ffffffffffffffff811115610bbc57610bbc6108c4565b610bd081610bca8454610b19565b84610b53565b602080601f831160018114610c055760008415610bed5750858301515b600019600386901b1c1916600185901b178555610b99565b600085815260208120601f198616915b82811015610c3457888601518255948401946001909101908401610c15565b5085821015610c525787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b600060018201610c9857634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220022984bc4364f58be459ae185383606099f2de22965d72995617ee3bb5aaaed364736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Registry.sol:Registry",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 167,
        "contract": "contracts/Registry.sol:Registry",
        "label": "assets",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_struct(Asset)163_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Asset)163_storage)dyn_storage": {
        "base": "t_struct(Asset)163_storage",
        "encoding": "dynamic_array",
        "label": "struct Registry.Asset[]",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Asset)163_storage": {
        "encoding": "inplace",
        "label": "struct Registry.Asset",
        "members": [
          {
            "astId": 148,
            "contract": "contracts/Registry.sol:Registry",
            "label": "network",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 150,
            "contract": "contracts/Registry.sol:Registry",
            "label": "contractAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 152,
            "contract": "contracts/Registry.sol:Registry",
            "label": "id",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 154,
            "contract": "contracts/Registry.sol:Registry",
            "label": "Status",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 156,
            "contract": "contracts/Registry.sol:Registry",
            "label": "registrar",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 158,
            "contract": "contracts/Registry.sol:Registry",
            "label": "registryId",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 160,
            "contract": "contracts/Registry.sol:Registry",
            "label": "info",
            "offset": 0,
            "slot": "6",
            "type": "t_string_storage"
          },
          {
            "astId": 162,
            "contract": "contracts/Registry.sol:Registry",
            "label": "ensName",
            "offset": 0,
            "slot": "7",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}