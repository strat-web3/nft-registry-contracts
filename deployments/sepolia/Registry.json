{
  "address": "0x32a6e4cD44f38D15860E4c24d40a1004E9dCb436",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "network",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Edited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "network",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Registered",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_network",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_mediaFileHash",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_tokenURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_AssetType",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_tangible",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_redeemable",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_Status",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_registrar",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_info",
          "type": "string"
        }
      ],
      "name": "addEntry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "assets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "network",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "mediaFileHash",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "AssetType",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "tangible",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "redeemable",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "Status",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "registrar",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "info",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xd95a263afa265656e331e182c328fb9932f72bd65fe10d2c1db63859b91c7c89",
  "receipt": {
    "to": null,
    "from": "0xd63ed6E274bedb34D9666B8f62ed32a73C43DD9e",
    "contractAddress": "0x32a6e4cD44f38D15860E4c24d40a1004E9dCb436",
    "transactionIndex": 35,
    "gasUsed": "719077",
    "logsBloom": "0x
    "blockHash": "0xf74edae1d46b7a6e863799a540db2580c8a70b78fa5cc1cb649f972d0ed086f2",
    "transactionHash": "0xd95a263afa265656e331e182c328fb9932f72bd65fe10d2c1db63859b91c7c89",
    "logs": [
      {
        "transactionIndex": 35,
        "blockNumber": 5113684,
        "transactionHash": "0xd95a263afa265656e331e182c328fb9932f72bd65fe10d2c1db63859b91c7c89",
        "address": "0x32a6e4cD44f38D15860E4c24d40a1004E9dCb436",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000d63ed6e274bedb34d9666b8f62ed32a73c43dd9e"
        ],
        "data": "0x",
        "logIndex": 67,
        "blockHash": "0xf74edae1d46b7a6e863799a540db2580c8a70b78fa5cc1cb649f972d0ed086f2"
      }
    ],
    "blockNumber": 5113684,
    "cumulativeGasUsed": "5197065",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "185ad4f7f1d3dc54d5b91afa388a8eda",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"network\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Edited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"network\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_network\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_mediaFileHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_AssetType\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_tangible\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_redeemable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_Status\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_registrar\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_info\",\"type\":\"string\"}],\"name\":\"addEntry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"assets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"network\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"mediaFileHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"AssetType\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"tangible\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"redeemable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"Status\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"registrar\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"info\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Registry.sol\":\"Registry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Registry.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Registry is Ownable {\\n    enum AssetType {\\n        ARTWORK,\\n        ENS_DOMAIN_NAME,\\n        COLLECTIBLE,\\n        ATTESTATION,\\n        KEY,\\n        ANY\\n    }\\n\\n    enum Status {\\n        ACTIVE,\\n        DELETED,\\n        FROZEN,\\n        STOLEN,\\n        LOST,\\n        MOVED\\n    }\\n\\n    struct Asset {\\n        uint256 network;\\n        address contractAddress;\\n        uint256 tokenId;\\n        string mediaFileHash;\\n        string tokenURI;\\n        uint256 AssetType;\\n        bool tangible;\\n        bool redeemable;\\n        uint256 Status;\\n        address creator;\\n        address registrar;\\n        address owner;\\n        string info;\\n    }\\n    Asset[] public assets;\\n\\n    event Registered(uint256 network, address contractAddress, uint256 tokenId);\\n    event Edited(uint256 network, address contractAddress, uint256 tokenId);\\n\\n    constructor() {}\\n\\n    function addEntry(\\n        uint256 _network,\\n        address _contractAddress,\\n        uint256 _tokenId,\\n        string memory _mediaFileHash,\\n        string memory _tokenURI,\\n        uint256 _AssetType,\\n        bool _tangible,\\n        bool _redeemable,\\n        uint256 _Status,\\n        address _creator,\\n        address _registrar,\\n        address _owner,\\n        string memory _info\\n    ) public onlyOwner {\\n        assets.push(\\n            Asset({\\n                network: _network,\\n                contractAddress: _contractAddress,\\n                tokenId: _tokenId,\\n                mediaFileHash: _mediaFileHash,\\n                tokenURI: _tokenURI,\\n                AssetType: _AssetType,\\n                tangible: _tangible,\\n                redeemable: _redeemable,\\n                Status: _Status,\\n                creator: _creator,\\n                registrar: _registrar,\\n                owner: _owner,\\n                info: _info\\n            })\\n        );\\n        emit Registered(_network, _contractAddress, _tokenId);\\n    }\\n\\n    receive() external payable {\\n        revert();\\n    }\\n\\n    fallback() external payable {\\n        revert();\\n    }\\n}\\n\",\"keccak256\":\"0xf0f91a189c986b66d60c8f98de8ac9c4b348d73ee0a3fd6b85a13ab85669daec\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x6080806040523461005b5760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3610b9990816100618239f35b600080fdfe6080604052600436101561001e575b361561001957600080fd5b600080fd5b60003560e01c8063715018a6146108c85780638da5cb5b1461089f578063b674fb4314610235578063cf35bdd0146101205763f2fde38b0361000e5734610019576020366003190112610019576004356001600160a01b038181169182900361001957610089610b0b565b81156100cc57600054826001600160601b0360a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b3461001957602036600319011261001957600435600154811015610019576101479061099a565b508054600182015460028301546001600160a01b039182169390919061016f60038201610a25565b9161017c60048301610a25565b92600583015493600684015460078501549184600887015416938560098801541695600a8801541696600b016101b190610a25565b986040519b8c9b8c5260208c015260408b01526101a08060608c01528a016101d891610acb565b89810360808b01526101e991610acb565b9560a089015260ff8116151560c089015260081c60ff16151560e088015261010087015261012086015261014085015261016084015282810361018084015261023191610acb565b0390f35b34610019576101a080600319360112610019576024356001600160a01b03811681036100195760643567ffffffffffffffff81116100195761027b903690600401610943565b60843567ffffffffffffffff81116100195761029b903690600401610943565b60c43580151581036100195760e435801515810361001957610124356001600160a01b038116919082900361001957610144356001600160a01b03811693908490036100195761016435946001600160a01b0386168603610019576101843567ffffffffffffffff811161001957610317903690600401610943565b96610320610b0b565b604051998a018a811067ffffffffffffffff8211176106ea576040526004358a5260018060a01b03891660208b015260443560408b015260608a0152608089015260a43560a0890152151560c0880152151560e08701526101043561010087015261012086015261014085015260018060a01b0316610160840152610180830152600154680100000000000000008110156106ea578060016103c5920160015561099a565b92909261088957805183556001830160018060a01b036020830151166001600160601b0360a01b82541617905560408101516002840155606081015192835167ffffffffffffffff81116106ea5761042060038301546109eb565b601f8111610842575b506020601f82116001146107d35781929394956000926107c8575b50508160011b916000199060031b1c19161760038201555b608082015180519067ffffffffffffffff82116106ea5761048060048401546109eb565b601f8111610781575b50602090601f831160011461070b5791806101809492600b94600092610700575b50508160011b916000199060031b1c19161760048201555b60a084015160058201556006810160c08501511515815460ff61ff0060e0890151151560081b1692169061ffff19161717905561010084015160078201556008810160018060a01b03610120860151166001600160601b0360a01b8254161790556009810160018060a01b03610140860151166001600160601b0360a01b825416179055600a810160018060a01b03610160860151166001600160601b0360a01b8254161790550191015180519067ffffffffffffffff82116106ea5761058983546109eb565b601f81116106a2575b50602090601f8311600114610615579180606094927f39dd062cc095bf933d83338d8e4591b7eb119264d876f173cacb1cfdf2c9737f969460009261060a575b50508160011b916000199060031b1c19161790555b6040805160043581526001600160a01b03909216602083015260443590820152a1005b0151905086806105d2565b90601f198316918460005260206000209260005b81811061068a57509260019285927f39dd062cc095bf933d83338d8e4591b7eb119264d876f173cacb1cfdf2c9737f98966060989610610671575b505050811b0190556105e7565b015160001960f88460031b161c19169055868080610664565b92936020600181928786015181550195019301610629565b836000526020600020601f840160051c810191602085106106e0575b601f0160051c01905b8181106106d45750610592565b600081556001016106c7565b90915081906106be565b634e487b7160e01b600052604160045260246000fd5b0151905087806104aa565b906004840160005260206000209160005b601f19851681106107695750926101809492600192600b9583601f19811610610750575b505050811b0160048201556104c2565b015160001960f88460031b161c19169055878080610740565b9192602060018192868501518155019401920161071c565b600484016000526020600020601f840160051c8101602085106107c1575b601f830160051c820181106107b5575050610489565b6000815560010161079f565b508061079f565b015190508580610444565b6003830160005260206000209060005b601f198416811061082a575060019394959683601f19811610610811575b505050811b01600382015561045c565b015160001960f88460031b161c19169055858080610801565b9091602060018192858b0151815501930191016107e3565b600383016000526020600020601f830160051c810160208410610882575b601f830160051c82018110610876575050610429565b60008155600101610860565b5080610860565b634e487b7160e01b600052600060045260246000fd5b34610019576000366003190112610019576000546040516001600160a01b039091168152602090f35b34610019576000366003190112610019576108e1610b0b565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b90601f8019910116810190811067ffffffffffffffff8211176106ea57604052565b81601f820112156100195780359067ffffffffffffffff82116106ea5760405192610978601f8401601f191660200185610921565b8284526020838301011161001957816000926020809301838601378301015290565b6001548110156109d557600c906001600052027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c92168015610a1b575b6020831014610a0557565b634e487b7160e01b600052602260045260246000fd5b91607f16916109fa565b9060405191826000825492610a39846109eb565b908184526001948581169081600014610aa85750600114610a65575b5050610a6392500383610921565b565b9093915060005260209081600020936000915b818310610a90575050610a6393508201013880610a55565b85548884018501529485019487945091830191610a78565b915050610a6394506020925060ff191682840152151560051b8201013880610a55565b919082519283825260005b848110610af7575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610ad6565b6000546001600160a01b03163303610b1f57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea26469706673582212206c937311472d6c228e9d1ec23a69036f7ec64b05472d5f433b6f9a72c30a8a2064736f6c63430008130033",
  "deployedBytecode": "0x6080604052600436101561001e575b361561001957600080fd5b600080fd5b60003560e01c8063715018a6146108c85780638da5cb5b1461089f578063b674fb4314610235578063cf35bdd0146101205763f2fde38b0361000e5734610019576020366003190112610019576004356001600160a01b038181169182900361001957610089610b0b565b81156100cc57600054826001600160601b0360a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b3461001957602036600319011261001957600435600154811015610019576101479061099a565b508054600182015460028301546001600160a01b039182169390919061016f60038201610a25565b9161017c60048301610a25565b92600583015493600684015460078501549184600887015416938560098801541695600a8801541696600b016101b190610a25565b986040519b8c9b8c5260208c015260408b01526101a08060608c01528a016101d891610acb565b89810360808b01526101e991610acb565b9560a089015260ff8116151560c089015260081c60ff16151560e088015261010087015261012086015261014085015261016084015282810361018084015261023191610acb565b0390f35b34610019576101a080600319360112610019576024356001600160a01b03811681036100195760643567ffffffffffffffff81116100195761027b903690600401610943565b60843567ffffffffffffffff81116100195761029b903690600401610943565b60c43580151581036100195760e435801515810361001957610124356001600160a01b038116919082900361001957610144356001600160a01b03811693908490036100195761016435946001600160a01b0386168603610019576101843567ffffffffffffffff811161001957610317903690600401610943565b96610320610b0b565b604051998a018a811067ffffffffffffffff8211176106ea576040526004358a5260018060a01b03891660208b015260443560408b015260608a0152608089015260a43560a0890152151560c0880152151560e08701526101043561010087015261012086015261014085015260018060a01b0316610160840152610180830152600154680100000000000000008110156106ea578060016103c5920160015561099a565b92909261088957805183556001830160018060a01b036020830151166001600160601b0360a01b82541617905560408101516002840155606081015192835167ffffffffffffffff81116106ea5761042060038301546109eb565b601f8111610842575b506020601f82116001146107d35781929394956000926107c8575b50508160011b916000199060031b1c19161760038201555b608082015180519067ffffffffffffffff82116106ea5761048060048401546109eb565b601f8111610781575b50602090601f831160011461070b5791806101809492600b94600092610700575b50508160011b916000199060031b1c19161760048201555b60a084015160058201556006810160c08501511515815460ff61ff0060e0890151151560081b1692169061ffff19161717905561010084015160078201556008810160018060a01b03610120860151166001600160601b0360a01b8254161790556009810160018060a01b03610140860151166001600160601b0360a01b825416179055600a810160018060a01b03610160860151166001600160601b0360a01b8254161790550191015180519067ffffffffffffffff82116106ea5761058983546109eb565b601f81116106a2575b50602090601f8311600114610615579180606094927f39dd062cc095bf933d83338d8e4591b7eb119264d876f173cacb1cfdf2c9737f969460009261060a575b50508160011b916000199060031b1c19161790555b6040805160043581526001600160a01b03909216602083015260443590820152a1005b0151905086806105d2565b90601f198316918460005260206000209260005b81811061068a57509260019285927f39dd062cc095bf933d83338d8e4591b7eb119264d876f173cacb1cfdf2c9737f98966060989610610671575b505050811b0190556105e7565b015160001960f88460031b161c19169055868080610664565b92936020600181928786015181550195019301610629565b836000526020600020601f840160051c810191602085106106e0575b601f0160051c01905b8181106106d45750610592565b600081556001016106c7565b90915081906106be565b634e487b7160e01b600052604160045260246000fd5b0151905087806104aa565b906004840160005260206000209160005b601f19851681106107695750926101809492600192600b9583601f19811610610750575b505050811b0160048201556104c2565b015160001960f88460031b161c19169055878080610740565b9192602060018192868501518155019401920161071c565b600484016000526020600020601f840160051c8101602085106107c1575b601f830160051c820181106107b5575050610489565b6000815560010161079f565b508061079f565b015190508580610444565b6003830160005260206000209060005b601f198416811061082a575060019394959683601f19811610610811575b505050811b01600382015561045c565b015160001960f88460031b161c19169055858080610801565b9091602060018192858b0151815501930191016107e3565b600383016000526020600020601f830160051c810160208410610882575b601f830160051c82018110610876575050610429565b60008155600101610860565b5080610860565b634e487b7160e01b600052600060045260246000fd5b34610019576000366003190112610019576000546040516001600160a01b039091168152602090f35b34610019576000366003190112610019576108e1610b0b565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b90601f8019910116810190811067ffffffffffffffff8211176106ea57604052565b81601f820112156100195780359067ffffffffffffffff82116106ea5760405192610978601f8401601f191660200185610921565b8284526020838301011161001957816000926020809301838601378301015290565b6001548110156109d557600c906001600052027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c92168015610a1b575b6020831014610a0557565b634e487b7160e01b600052602260045260246000fd5b91607f16916109fa565b9060405191826000825492610a39846109eb565b908184526001948581169081600014610aa85750600114610a65575b5050610a6392500383610921565b565b9093915060005260209081600020936000915b818310610a90575050610a6393508201013880610a55565b85548884018501529485019487945091830191610a78565b915050610a6394506020925060ff191682840152151560051b8201013880610a55565b919082519283825260005b848110610af7575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610ad6565b6000546001600160a01b03163303610b1f57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea26469706673582212206c937311472d6c228e9d1ec23a69036f7ec64b05472d5f433b6f9a72c30a8a2064736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Registry.sol:Registry",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 184,
        "contract": "contracts/Registry.sol:Registry",
        "label": "assets",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_struct(Asset)180_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Asset)180_storage)dyn_storage": {
        "base": "t_struct(Asset)180_storage",
        "encoding": "dynamic_array",
        "label": "struct Registry.Asset[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Asset)180_storage": {
        "encoding": "inplace",
        "label": "struct Registry.Asset",
        "members": [
          {
            "astId": 155,
            "contract": "contracts/Registry.sol:Registry",
            "label": "network",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 157,
            "contract": "contracts/Registry.sol:Registry",
            "label": "contractAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 159,
            "contract": "contracts/Registry.sol:Registry",
            "label": "tokenId",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 161,
            "contract": "contracts/Registry.sol:Registry",
            "label": "mediaFileHash",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 163,
            "contract": "contracts/Registry.sol:Registry",
            "label": "tokenURI",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 165,
            "contract": "contracts/Registry.sol:Registry",
            "label": "AssetType",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 167,
            "contract": "contracts/Registry.sol:Registry",
            "label": "tangible",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          },
          {
            "astId": 169,
            "contract": "contracts/Registry.sol:Registry",
            "label": "redeemable",
            "offset": 1,
            "slot": "6",
            "type": "t_bool"
          },
          {
            "astId": 171,
            "contract": "contracts/Registry.sol:Registry",
            "label": "Status",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 173,
            "contract": "contracts/Registry.sol:Registry",
            "label": "creator",
            "offset": 0,
            "slot": "8",
            "type": "t_address"
          },
          {
            "astId": 175,
            "contract": "contracts/Registry.sol:Registry",
            "label": "registrar",
            "offset": 0,
            "slot": "9",
            "type": "t_address"
          },
          {
            "astId": 177,
            "contract": "contracts/Registry.sol:Registry",
            "label": "owner",
            "offset": 0,
            "slot": "10",
            "type": "t_address"
          },
          {
            "astId": 179,
            "contract": "contracts/Registry.sol:Registry",
            "label": "info",
            "offset": 0,
            "slot": "11",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "384"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}